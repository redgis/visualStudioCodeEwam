# [PackageDev] target_format: plist, ext: tmLanguage
---
name: Gold
scopeName: source.gold
fileTypes: ['gold', 'god']
uuid: 63661b9d-cf52-4bbe-b3e2-251d5072cf91

patterns:
- comment: Comments
  name: comment.line.character
  match: '[;].*'

- comment: Numeric constants
  name: constant.numeric
  match: '\b(-){0,1}([0-9]+[.][0-9]+)\b|\b([0-9]+)\b'

- comment: Character constants
  name: constant.character
  match: '[#][0-9]{3}'

- comment: Language constants
  match: '\b(true|True|false|False|nil|Nil)\b'
  captures:
    '1': {name: constant.language}

- comment: Language constants
  match: '\b(self|Self|_Result)\b'
  captures:
    '1' : {name: variable.language}

- comment: Numeric constants
  name: keyword.operator
  match: '\b(fetch|select|OQLClassId|OQLCount|OQLMax|OQLMin|OQLSum|OqlUpdateDate|OqlUpdateTime|or|ord|order|by|out|pass|and|bAnd|bNot|bOr|bXor|where|like|not|xor|into|Upcase|using)\b'

- comment: Types
  match: '\b(Int1|Int2|Int4|Int8|Num8|Text|Pointer|CString|Decimal|Boolean|int|char|array|chr)\b'
  captures:
    '1': {name: storage.type.gold}

- comment: Types
  name: storage.type.gold
  match: '\b(num)\([0-9]+\)\b'

- comment: General keywords
  match: '\b(_MethodName|_ModuleName|_move|absolute|allVersionsOf|begin|concat|continue|descending|dispose|distinct|exit|first|from|Group|by|in|inherited|instanceOf|inOut|inverse|last|length|listOf|member|memory|MetaModelEntity|new|nil|num|of|PhantomsToo|pred|refTo|reimplem|return|Scenario|sizeof|step|string|succ|throw|uses|versioned|Write|WriteLn|at|packed|anycase|dynamic|rem|global|remote|multiLang|fetch|select|OQLClassId|OQLCount|OQLMax|OQLMin|OQLSum|OqlUpdateDate|OqlUpdateTime|or|ord|order|by|out|pass|and|bAnd|bNot|bOr|bXor|where|like|not|xor|into|Upcase|using)\b'
  captures:
    '1': {name: keyword.other}

- comment: Structural keywords
  match: '\b(class|endClass|module|endModule|function|endFunc|procedure|endProc|nativeRecord|record|endRecord|end)\b'
  captures:
    '1': {name: keyword.structure}

- comment: Flow control keywords
  match: '\b(if|then|elseIf|else|endIf|while|endWhile|for|to|downTo|forEach|endFor|repeat|until|loop|endLoop|break|try|catch|when|endWhen|finally|endTry|switch|endSwitch|when)\b'
  captures:
    '1': {name: keyword.control}

- comment: Entity declaration
  match: '\b(class|module|function|procedure|nativeRecord|record|var|const|type)\b'
  captures:
    '1': {name: storage.type}

- comment: Modifiers keywords
  name: storage.modifier
  match: '\b(public|private|protected|final|override|forward|external|memory)\b'

- comment: Strings in ""
  name: string.quoted.double
  begin: '"'
  end: '"'
  patterns:
  - name: constant.character
    match: = '[#][0-9]{3}'

- comment: Strings in ''
  name: string.quoted.simple
  begin: \'
  end: \'
  patterns:
  - name: constant.character
    match: '[#][0-9]{3}'

# - comment: Function definition
#   name: entity.other
#   begin: '(function)\b([a-zA-Z][a-zA-Z0-9]*)\b(\(.*\))?\b(return)\b([a-zA-Z][a-zA-Z0-9]*)'
#   end: '(endFunc)'
#   beginCaptures:
#     '2': {name: entity.name.function}

# - comment: Procedure definition
#   name: entity.other
#   begin: '(procedure)\b([a-zA-Z][a-zA-Z0-9]*)\b(\(.*\))?'
#   end: '(endProc)'
#   beginCaptures:
#     '2': {name: entity.name.function}

# - comment: Procedure definition
#   name: meta.function.gold
#   match: '(procedure)'

# - comment: Function definition
#   name: meta.function.gold
#   match: '(function)'
...